from datetime import datetime

def format_schedule_text(day_info: dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å –¥–ª—è –≥—Ä—É–ø–ø—ã."""
    if not day_info or 'error' in day_info:
        return f"‚ùå <b>–û—à–∏–±–∫–∞:</b> {day_info.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}"

    date_obj = day_info.get('date')
    if not date_obj:
        return "‚ùå <b>–û—à–∏–±–∫–∞:</b> –î–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –¥–∞–Ω–Ω—ã—Ö —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è."

    date_str = date_obj.strftime('%d.%m.%Y')
    day_name = day_info.get('day_name', '')
    week_type = f"({day_info.get('week_type_name', '')})" if day_info.get('week_type_name') else ""

    header = f"üóì <b>{date_str} ¬∑ {day_name}</b> {week_type}\n"
    
    lessons = day_info.get('lessons')
    if not lessons:
        return header + "\nüéâ <b>–ó–∞–Ω—è—Ç–∏–π –Ω–µ—Ç!</b>"

    lesson_parts = []
    for lesson in lessons:
        time_str = lesson.get('time', '–í—Ä–µ–º—è –Ω–µ —É–∫–∞–∑–∞–Ω–æ')
        subject_str = lesson.get('subject', '–ü—Ä–µ–¥–º–µ—Ç –Ω–µ —É–∫–∞–∑–∞–Ω')
        type_str = f"({lesson.get('type', '')})" if lesson.get('type') else ""
        
        lesson_header = f"<b>{time_str}</b>\n{subject_str} {type_str}"
        
        details_parts = []
        teachers = lesson.get('teachers')
        if teachers:
            details_parts.append(f"üßë‚Äçüè´ {teachers}")
        
        room = lesson.get('room')
        if room:
            details_parts.append(f"üìç {room}")
        
        details_str = "\n" + " ".join(details_parts) if details_parts else ""
        lesson_parts.append(f"{lesson_header}{details_str}")

    return header + "\n\n".join(lesson_parts)


def format_teacher_schedule_text(schedule_info: dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è."""
    if not schedule_info or schedule_info.get('error'):
        return f"‚ùå <b>–û—à–∏–±–∫–∞:</b> {schedule_info.get('error', '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è.')}"

    teacher_name = schedule_info.get('teacher_name', '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å')
    date_str = schedule_info['date'].strftime('%d.%m.%Y')
    day_name = schedule_info.get('day_name', '')

    header = f"üßë‚Äçüè´ <b>{teacher_name}</b>\nüóì <b>{date_str} ¬∑ {day_name}</b>\n"
    
    lessons = schedule_info.get('lessons')
    if not lessons:
        return header + "\nüéâ <b>–ó–∞–Ω—è—Ç–∏–π –Ω–µ—Ç!</b>"

    lesson_parts = []
    for lesson in lessons:
        time_str = lesson.get('time', '–í—Ä–µ–º—è –Ω–µ —É–∫–∞–∑–∞–Ω–æ')
        subject_str = lesson.get('subject', '–ü—Ä–µ–¥–º–µ—Ç –Ω–µ —É–∫–∞–∑–∞–Ω')
        group_str = f" ({lesson.get('group', '–≥—Ä—É–ø–ø–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞')})"
        
        lesson_header = f"<b>{time_str}</b>\n{subject_str}{group_str}"
        
        details_parts = []
        room = lesson.get('room')
        if room:
            details_parts.append(f"üìç {room}")
        
        details_str = "\n" + " ".join(details_parts) if details_parts else ""
        lesson_parts.append(f"{lesson_header}{details_str}")

    return header + "\n\n".join(lesson_parts)


def format_classroom_schedule_text(schedule_info: dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å –¥–ª—è –∞—É–¥–∏—Ç–æ—Ä–∏–∏."""
    if not schedule_info or schedule_info.get('error'):
        return f"‚ùå <b>–û—à–∏–±–∫–∞:</b> {schedule_info.get('error', '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∞—É–¥–∏—Ç–æ—Ä–∏–∏.')}"

    classroom_number = schedule_info.get('classroom_number', '–ê—É–¥–∏—Ç–æ—Ä–∏—è')
    date_str = schedule_info['date'].strftime('%d.%m.%Y')
    day_name = schedule_info.get('day_name', '')

    header = f"üö™ <b>–ê—É–¥–∏—Ç–æ—Ä–∏—è {classroom_number}</b>\nüóì <b>{date_str} ¬∑ {day_name}</b>\n"
    
    lessons = schedule_info.get('lessons')
    if not lessons:
        return header + "\n‚úÖ <b>–ê—É–¥–∏—Ç–æ—Ä–∏—è —Å–≤–æ–±–æ–¥–Ω–∞ –≤–µ—Å—å –¥–µ–Ω—å!</b>"

    lesson_parts = []
    for lesson in lessons:
        time_str = lesson.get('time', '–í—Ä–µ–º—è –Ω–µ —É–∫–∞–∑–∞–Ω–æ')
        subject_str = lesson.get('subject', '–ü—Ä–µ–¥–º–µ—Ç –Ω–µ —É–∫–∞–∑–∞–Ω')
        group_str = f"({lesson.get('group', '–≥—Ä—É–ø–ø–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞')})"
        
        lesson_header = f"<b>{time_str}</b>\n{subject_str}{group_str}"
        
        details_parts = []
        teachers = lesson.get('teachers')
        if teachers:
            details_parts.append(f"üßë‚Äçüè´ {teachers}")
        
        details_str = "\n" + " ".join(details_parts) if details_parts else ""
        lesson_parts.append(f"{lesson_header}{details_str}")

    return header + "\n\n".join(lesson_parts)


def format_full_week_text(week_schedule: dict, week_name: str) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –≤—Å—é –Ω–µ–¥–µ–ª—é —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–æ–π –ø–∞—Ä."""
    days_order = ["–ü–û–ù–ï–î–ï–õ–¨–ù–ò–ö", "–í–¢–û–†–ù–ò–ö", "–°–†–ï–î–ê", "–ß–ï–¢–í–ï–†–ì", "–ü–Ø–¢–ù–ò–¶–ê", "–°–£–ë–ë–û–¢–ê"]
    text_parts = [f"üóì <b>{week_name.capitalize()}</b>"]
    
    sorted_days = sorted(week_schedule.keys(), key=lambda day: days_order.index(day.upper()) if day.upper() in days_order else 99)

    for day_name in sorted_days:
        lessons = week_schedule.get(day_name)
        
        if lessons:
            text_parts.append(f"\n--- <b>{day_name.upper()}</b> ---")
            
            try:
                sorted_lessons = sorted(
                    lessons, 
                    key=lambda lesson: datetime.strptime(lesson.get('time', '23:59').split('-')[0].strip(), '%H:%M').time()
                )
            except (ValueError, IndexError):
                sorted_lessons = lessons

            for lesson in sorted_lessons:
                time_str = lesson.get('time', '–í—Ä–µ–º—è –Ω–µ —É–∫–∞–∑–∞–Ω–æ')
                subject_str = lesson.get('subject', '–ü—Ä–µ–¥–º–µ—Ç –Ω–µ —É–∫–∞–∑–∞–Ω')
                type_str = f"({lesson.get('type', '')})" if lesson.get('type') else ""
                
                text_parts.append(f"{time_str} - <b>{subject_str}</b> {type_str}")
                
                details_parts = []
                teachers = lesson.get('teachers')
                if teachers:
                    details_parts.append(f"üßë‚Äçüè´ {teachers}")
                
                room = lesson.get('room')
                if room:
                    details_parts.append(f"üìç {room}")
                
                if details_parts:
                    text_parts.append(" ".join(details_parts))
    
    if len(text_parts) == 1:
        return f"üóì <b>{week_name.capitalize()}</b>\n\nüéâ –ù–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –∑–∞–Ω—è—Ç–∏–π –Ω–µ—Ç!"
        
    return "\n".join(text_parts)