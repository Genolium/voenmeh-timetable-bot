from core.config import MAP_URL 

def format_schedule_text(day_info: dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å –¥–ª—è –≥—Ä—É–ø–ø—ã."""
    if not day_info or 'error' in day_info:
        return f"‚ùå <b>–û—à–∏–±–∫–∞:</b> {day_info.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}"

    date_str = day_info['date'].strftime('%d.%m.%Y')
    day_name = day_info['day_name']
    week_name = day_info['week_name']
    lessons = day_info['lessons']

    header = f"üóì <b>{date_str}</b> - {day_name} <i>({week_name} –Ω–µ–¥–µ–ª—è)</i>"
    
    if not lessons:
        return f"{header}\n\nüéâ –ó–∞–Ω—è—Ç–∏–π –Ω–µ—Ç, –º–æ–∂–Ω–æ –æ—Ç–¥—ã—Ö–∞—Ç—å!"

    body = []
    for lesson in lessons:
        teachers = f"<i>{lesson['teachers']}</i>" if lesson['teachers'] else ""
        
        room_text = ""
        room_data = lesson.get('room')
        if room_data and room_data.strip() not in ['N/A', '–∫–∞–±–∏–Ω–µ—Ç –Ω–µ —É–∫–∞–∑–∞–Ω', '']:
            room_text = f"üìç {room_data}" 
        else:
            room_text = "ü§∑‚Äç‚ôÄÔ∏è –∫–∞–±–∏–Ω–µ—Ç –Ω–µ —É–∫–∞–∑–∞–Ω"

        lesson_str = (
            f"<b>{lesson['time']}</b> - {lesson['subject']} ({lesson['type']})\n"
            f"<pre>   {room_text:<25} {teachers}</pre>"
        )
        body.append(lesson_str)
    
    map_link_text = f"\n\n–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–∞–±–∏–Ω–µ—Ç–æ–≤: <a href='{MAP_URL}'>–ö–∞—Ä—Ç–∞ –∫–æ—Ä–ø—É—Å–æ–≤</a>"

    return f"{header}\n\n" + "\n".join(body) + map_link_text


def format_full_week_text(week_schedule, week_name_header):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –≤—Å—é –Ω–µ–¥–µ–ª—é –¥–ª—è –≥—Ä—É–ø–ø—ã."""
    text = f"üóì <b>{week_name_header}</b>\n\n"
    days_ordered = ['–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫', '–°—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä–≥', '–ü—è—Ç–Ω–∏—Ü–∞', '–°—É–±–±–æ—Ç–∞']
    has_any_lesson = False

    for day in days_ordered:
        lessons = week_schedule.get(day)
        if lessons:
            has_any_lesson = True
            text += f"<b>--- {day.upper()} ---</b>\n"
            for lesson in lessons:
                text += (
                    f"<b>{lesson['time']}</b> - {lesson['subject']} ({lesson['type']})\n"
                    f"<i>   {lesson['room']}, {lesson['teachers']}</i>\n"
                )
            text += "\n"
    
    if not has_any_lesson:
        return text + "üéâ –ó–∞–Ω—è—Ç–∏–π –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –Ω–µ—Ç!"
    return text + f"\n\n–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–∞–±–∏–Ω–µ—Ç–æ–≤: <a href='{MAP_URL}'>–ö–∞—Ä—Ç–∞ –∫–æ—Ä–ø—É—Å–æ–≤</a>"


def format_teacher_schedule_text(day_info: dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –Ω–∞ –¥–µ–Ω—å, –≥—Ä—É–ø–ø–∏—Ä—É—è –≥—Ä—É–ø–ø—ã."""
    if not day_info or 'error' in day_info:
        return f"‚ùå <b>–û—à–∏–±–∫–∞:</b> {day_info.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}"

    date_str = day_info['date'].strftime('%d.%m.%Y')
    day_name = day_info['day_name']
    week_name = day_info['week_name']
    lessons = day_info['lessons']
    teacher_name = day_info['teacher']

    header = f"üßë‚Äçüè´ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è <b>{teacher_name}</b>\n"
    header += f"üóì <b>{date_str}</b> - {day_name} <i>({week_name} –Ω–µ–¥–µ–ª—è)</i>"
    
    if not lessons:
        return f"{header}\n\nüéâ –£ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø–∞—Ä –≤ —ç—Ç–æ—Ç –¥–µ–Ω—å."

    body = []
    for lesson in lessons:
        groups_list = lesson.get('groups', [])
        groups = f"<i>–≥—Ä. {', '.join(sorted(groups_list))}</i>" if groups_list else ""
        
        room_text = ""
        room_data = lesson.get('room')
        if room_data and room_data.strip() not in ['N/A', '–∫–∞–±–∏–Ω–µ—Ç –Ω–µ —É–∫–∞–∑–∞–Ω', '']:
            room_text = f"üìç {room_data}" 
        else:
            room_text = "ü§∑‚Äç‚ôÄÔ∏è –∫–∞–±–∏–Ω–µ—Ç –Ω–µ —É–∫–∞–∑–∞–Ω"
        
        lesson_str = (
            f"<b>{lesson['time']}</b> - {lesson['subject']} ({lesson['type']})\n"
            f"<pre>   {room_text:<25} {groups}</pre>"
        )
        body.append(lesson_str)
    
    return f"{header}\n\n" + "\n".join(body) + f"\n\n–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–∞–±–∏–Ω–µ—Ç–æ–≤: <a href='{MAP_URL}'>–ö–∞—Ä—Ç–∞ –∫–æ—Ä–ø—É—Å–æ–≤</a>"


def format_classroom_schedule_text(day_info: dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∞—É–¥–∏—Ç–æ—Ä–∏–∏ –Ω–∞ –¥–µ–Ω—å, –≥—Ä—É–ø–ø–∏—Ä—É—è –≥—Ä—É–ø–ø—ã."""
    if not day_info or 'error' in day_info:
        return f"‚ùå <b>–û—à–∏–±–∫–∞:</b> {day_info.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}"

    date_str = day_info['date'].strftime('%d.%m.%Y')
    day_name = day_info['day_name']
    week_name = day_info['week_name']
    lessons = day_info['lessons']
    classroom_number = day_info['classroom']

    header = f"üö™ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∞—É–¥–∏—Ç–æ—Ä–∏–∏ <b>{classroom_number}</b>\n"
    header += f"üóì <b>{date_str}</b> - {day_name} <i>({week_name} –Ω–µ–¥–µ–ª—è)</i>"
    
    if not lessons:
        return f"{header}\n\nüéâ –ê—É–¥–∏—Ç–æ—Ä–∏—è —Å–≤–æ–±–æ–¥–Ω–∞ –≤ —ç—Ç–æ—Ç –¥–µ–Ω—å."

    body = []
    for lesson in lessons:
        groups_list = lesson.get('groups', [])
        groups = f"<i>–≥—Ä. {', '.join(sorted(groups_list))}</i>" if groups_list else ""
        teachers = f"<i>{lesson.get('teachers', '')}</i>" if lesson.get('teachers') else ""
        
        room_text = ""
        room_data = lesson.get('room')
        if room_data and room_data.strip() not in ['N/A', '–∫–∞–±–∏–Ω–µ—Ç –Ω–µ —É–∫–∞–∑–∞–Ω', '']:
            room_text = f"üìç {room_data}" 
        else:
            room_text = "ü§∑‚Äç‚ôÄÔ∏è –∫–∞–±–∏–Ω–µ—Ç –Ω–µ —É–∫–∞–∑–∞–Ω"
        
        lesson_str = (
            f"<b>{lesson['time']}</b> - {lesson['subject']} ({lesson['type']})\n"
            f"<pre>   {groups:<15} {teachers}</pre>"
        )
        body.append(lesson_str)
    
    return f"{header}\n\n" + "\n".join(body) + f"\n\n–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–∞–±–∏–Ω–µ—Ç–æ–≤: <a href='{MAP_URL}'>–ö–∞—Ä—Ç–∞ –∫–æ—Ä–ø—É—Å–æ–≤</a>"