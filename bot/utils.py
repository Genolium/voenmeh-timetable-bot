from core.config import MAP_URL 

def format_schedule_text(day_info: dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å –¥–ª—è –≥—Ä—É–ø–ø—ã (—Å –Ω–æ–≤—ã–º –¥–∏–∑–∞–π–Ω–æ–º)."""
    if not day_info or 'error' in day_info:
        return f"‚ùå <b>–û—à–∏–±–∫–∞:</b> {day_info.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}"

    date_str = day_info['date'].strftime('%d.%m.%Y')
    day_name = day_info['day_name']
    week_name = day_info['week_name']
    lessons = day_info['lessons']

    header = f"üóì <b>{date_str}</b> ¬∑ {day_name} <i>({week_name} –Ω–µ–¥–µ–ª—è)</i>"
    
    if not lessons:
        # –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–æ –¥–ª—è –¥–Ω–µ–π –±–µ–∑ –ø–∞—Ä (–∫—Ä–æ–º–µ —Å–µ–≥–æ–¥–Ω—è)
        return f"{header}\n\nüéâ –ó–∞–Ω—è—Ç–∏–π –Ω–µ—Ç, –º–æ–∂–Ω–æ –æ—Ç–¥—ã—Ö–∞—Ç—å!"

    body = []
    for lesson in lessons:
        time = lesson['time']
        subject = lesson['subject']
        lesson_type = lesson['type']
        
        # --- –£–ª—É—á—à–µ–Ω–Ω—ã–π –±–ª–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π ---
        teachers = lesson.get('teachers')
        teachers_str = f"üßë‚Äçüè´ <i>{teachers}</i>" if teachers else "üßë‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –Ω–µ —É–∫–∞–∑–∞–Ω"
        
        # --- –£–ª—É—á—à–µ–Ω–Ω—ã–π –±–ª–æ–∫ –∞—É–¥–∏—Ç–æ—Ä–∏–∏ ---
        room = lesson.get('room')
        room_str = ""
        if room and room.strip() not in ['N/A', '–∫–∞–±–∏–Ω–µ—Ç –Ω–µ —É–∫–∞–∑–∞–Ω', '']:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º <code> –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ –∫–ª–∏–∫—É
            room_number = room.split(" ")[0] # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –Ω–æ–º–µ—Ä - –ø–µ—Ä–≤–æ–µ —Å–ª–æ–≤–æ
            room_str = f"üìç –ê—É–¥–∏—Ç–æ—Ä–∏—è: <code>{room_number}</code>"
        else:
            room_str = "ü§∑‚Äç‚ôÄÔ∏è –ö–∞–±–∏–Ω–µ—Ç –Ω–µ —É–∫–∞–∑–∞–Ω"

        lesson_block = (
            f"<b>{time}</b>\n"
            f"<b>{subject}</b> ({lesson_type})\n"
            f"{teachers_str}\n"
            f"{room_str}"
        )
        body.append(lesson_block)
    
    map_link_text = f"\n\nüó∫Ô∏è <a href='{MAP_URL}'>–ö–∞—Ä—Ç–∞ –∫–æ—Ä–ø—É—Å–æ–≤</a>"

    return f"{header}\n\n" + "\n\n".join(body) + map_link_text

def format_full_week_text(week_schedule, week_name_header):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –≤—Å—é –Ω–µ–¥–µ–ª—é –¥–ª—è –≥—Ä—É–ø–ø—ã (—É–ª—É—á—à–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω)."""
    text = f"üóì <b>{week_name_header}</b>\n"
    days_ordered = ['–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫', '–°—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä–≥', '–ü—è—Ç–Ω–∏—Ü–∞', '–°—É–±–±–æ—Ç–∞']
    has_any_lesson = False

    day_texts = []
    for day in days_ordered:
        lessons = week_schedule.get(day)
        if lessons:
            has_any_lesson = True
            day_header = f"<b>--- {day.upper()} ---</b>"
            lesson_texts = []
            # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–∞—Ä—ã –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
            sorted_lessons = sorted(lessons, key=lambda x: x['time'])
            for lesson in sorted_lessons:
                time = lesson.get('time', '–í—Ä–µ–º—è –Ω–µ —É–∫–∞–∑–∞–Ω–æ')
                subject = lesson.get('subject', '–ü—Ä–µ–¥–º–µ—Ç –Ω–µ —É–∫–∞–∑–∞–Ω')
                lesson_type = lesson.get('type', '')
                
                teachers_str = f"üßë‚Äçüè´ <i>{lesson['teachers']}</i>" if lesson.get('teachers') else ""
                
                room_str = ""
                if lesson.get('room') and lesson['room'].strip() not in ['N/A', '–∫–∞–±–∏–Ω–µ—Ç –Ω–µ —É–∫–∞–∑–∞–Ω', '']:
                    room_str = f"üìç <code>{lesson['room']}</code>"

                lesson_texts.append(
                    f"<b>{time}</b> - {subject} ({lesson_type})\n{teachers_str} {room_str}".strip()
                )
            day_texts.append(day_header + "\n" + "\n".join(lesson_texts))

    if not has_any_lesson:
        return text + "\nüéâ –ó–∞–Ω—è—Ç–∏–π –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –Ω–µ—Ç!"
        
    return text + "\n\n".join(day_texts) + f"\n\n\nüó∫Ô∏è <a href='{MAP_URL}'>–ö–∞—Ä—Ç–∞ –∫–æ—Ä–ø—É—Å–æ–≤</a>"

def format_teacher_schedule_text(day_info: dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –Ω–∞ –¥–µ–Ω—å (—É–ª—É—á—à–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω)."""
    if not day_info or 'error' in day_info:
        return f"‚ùå <b>–û—à–∏–±–∫–∞:</b> {day_info.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}"

    date_str = day_info['date'].strftime('%d.%m.%Y')
    day_name = day_info['day_name']
    week_name = day_info['week_name']
    lessons = day_info['lessons']
    teacher_name = day_info['teacher']

    header = f"üßë‚Äçüè´ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è <b>{teacher_name}</b>\n"
    header += f"üóì <b>{date_str}</b> ¬∑ {day_name} <i>({week_name} –Ω–µ–¥–µ–ª—è)</i>"
    
    if not lessons:
        return f"{header}\n\nüéâ –£ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø–∞—Ä –≤ —ç—Ç–æ—Ç –¥–µ–Ω—å."

    body = []
    for lesson in lessons:
        groups_list = lesson.get('groups', [])
        groups_str = f"üë• <i>–≥—Ä. {', '.join(sorted(groups_list))}</i>" if groups_list else ""
        
        room_str = ""
        if lesson.get('room') and lesson['room'].strip() not in ['N/A', '–∫–∞–±–∏–Ω–µ—Ç –Ω–µ —É–∫–∞–∑–∞–Ω', '']:
            room_str = f"üìç –ê—É–¥–∏—Ç–æ—Ä–∏—è: <code>{lesson['room']}</code>"
        
        lesson_block = (
            f"<b>{lesson['time']}</b>\n"
            f"<b>{lesson['subject']}</b> ({lesson['type']})\n"
            f"{groups_str}\n"
            f"{room_str}"
        )
        body.append(lesson_block)
    
    return f"{header}\n\n" + "\n\n".join(body)


def format_classroom_schedule_text(day_info: dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∞—É–¥–∏—Ç–æ—Ä–∏–∏ –Ω–∞ –¥–µ–Ω—å (—É–ª—É—á—à–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω)."""
    if not day_info or 'error' in day_info:
        return f"‚ùå <b>–û—à–∏–±–∫–∞:</b> {day_info.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}"

    date_str = day_info['date'].strftime('%d.%m.%Y')
    day_name = day_info['day_name']
    week_name = day_info['week_name']
    lessons = day_info['lessons']
    classroom_number = day_info['classroom']

    header = f"üö™ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∞—É–¥–∏—Ç–æ—Ä–∏–∏ <b>{classroom_number}</b>\n"
    header += f"üóì <b>{date_str}</b> ¬∑ {day_name} <i>({week_name} –Ω–µ–¥–µ–ª—è)</i>"
    
    if not lessons:
        return f"{header}\n\nüéâ –ê—É–¥–∏—Ç–æ—Ä–∏—è —Å–≤–æ–±–æ–¥–Ω–∞ –≤ —ç—Ç–æ—Ç –¥–µ–Ω—å."

    body = []
    for lesson in lessons:
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥—Ä—É–ø–ø–∞—Ö
        groups_list = lesson.get('groups', [])
        groups_str = f"üë• <i>–≥—Ä. {', '.join(sorted(groups_list))}</i>" if groups_list else ""
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è—Ö
        teachers = lesson.get('teachers', '')
        teachers_str = f"üßë‚Äçüè´ <i>{teachers}</i>" if teachers else ""
        
        lesson_block = (
            f"<b>{lesson['time']}</b>\n"
            f"<b>{lesson['subject']}</b> ({lesson['type']})\n"
            f"{groups_str}\n"
            f"{teachers_str}"
        )
        # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏, –µ—Å–ª–∏ –∫–∞–∫–æ–π-—Ç–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–µ—Ç
        body.append("\n".join(line for line in lesson_block.splitlines() if line.strip()))
    
    return f"{header}\n\n" + "\n\n".join(body)