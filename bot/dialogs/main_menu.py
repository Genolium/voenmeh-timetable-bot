import random
import re

from aiogram.types import CallbackQuery, Message
from aiogram_dialog import Dialog, DialogManager, StartMode, Window
from aiogram_dialog.widgets.input import MessageInput
from aiogram_dialog.widgets.kbd import Button, Column, Row
from aiogram_dialog.widgets.media import StaticMedia
from aiogram_dialog.widgets.text import Const, Format
from thefuzz import process

from core.config import WELCOME_IMAGE_PATH
from core.manager import TimetableManager
from core.user_data import UserDataManager

from .constants import DialogDataKeys, WidgetIds
from .states import About, MainMenu, Schedule


async def get_main_menu_data(dialog_manager: DialogManager, **kwargs):
    """
    –í—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é –≥—Ä—É–ø–ø—É –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞ –≤ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.
    """
    manager: TimetableManager = dialog_manager.middleware_data.get("manager")
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø, –∏—Å–∫–ª—é—á–∞—è —Å–ª—É–∂–µ–±–Ω—ã–µ –∫–ª—é—á–∏
    groups = [g for g in manager._schedules.keys() if not g.startswith("__")]

    # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –≥—Ä—É–ø–ø—É –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
    random_group = random.choice(groups) if groups else "–û735–ë"

    return {"random_group": random_group}


async def on_user_type_selected(callback: CallbackQuery, button: Button, manager: DialogManager):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Ç–∏–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Å—Ç—É–¥–µ–Ω—Ç/–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å)."""
    user_type = callback.data.replace("user_type_", "")  # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–∏–ø –∏–∑ callback_data (student/teacher)
    manager.dialog_data["user_type"] = user_type

    if user_type == "student":
        await manager.switch_to(MainMenu.enter_group)
    elif user_type == "teacher":
        await manager.switch_to(MainMenu.enter_teacher)


async def on_group_entered(message: Message, message_input: MessageInput, manager: DialogManager):
    # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –≤–≤–æ–¥: –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã/–±—É–∫–≤—ã, –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É
    raw = (message.text or "").upper()
    group_name = re.sub(r"[^–ê-–ØA-Z0-9]", "", raw)[:20]
    if not group_name:
        await message.answer(
            "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥!</b>\n\n"
            "üìù –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã –±—É–∫–≤–∞–º–∏ –∏ —Ü–∏—Ñ—Ä–∞–º–∏\n"
            "üí° <i>–ù–∞–ø—Ä–∏–º–µ—Ä: –û735–ë, –ú123–ê, –ò–í–¢-21</i>"
        )
        return
    timetable_manager: TimetableManager = manager.middleware_data.get("manager")
    all_groups = [g for g in timetable_manager._schedules.keys() if not g.startswith("__")]

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä—è–º–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
    if group_name not in all_groups:
        # –ï—Å–ª–∏ –ø—Ä—è–º–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –Ω–µ—Ç, –∏—â–µ–º –ø–æ—Ö–æ–∂–∏–µ
        suggestions = process.extract(group_name, all_groups, limit=3)
        good_suggestions = [s[0] for s in suggestions if s[1] > 75]

        if good_suggestions:
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
            formatted_suggestions = [f"<code>{s}</code>" for s in good_suggestions]
            # –°–æ–µ–¥–∏–Ω—è–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã —á–µ—Ä–µ–∑ ", –∏–ª–∏ " –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è
            suggestion_text = ", –∏–ª–∏ ".join(formatted_suggestions)
            await message.answer(
                f'üîç <b>–ì—Ä—É–ø–ø–∞ "{group_name}" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ —Ç–æ—á–Ω–æ</b>\n\n'
                f"üí° <b>–í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –∏–º–µ–ª–∏ –≤ –≤–∏–¥—É:</b>\n{suggestion_text}\n\n"
                f"üìù –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤"
            )
        else:
            # –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–∂–µ –ø–æ—Ö–æ–∂–∏—Ö, –≤—ã–≤–æ–¥–∏–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await message.answer(
                f"‚ùå –ì—Ä—É–ø–ø–∞ <b>{group_name}</b> –Ω–µ –Ω–∞–π–¥–µ–Ω–∞\n\n"
                f"üîç <b>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã</b>\n"
                f"üí° <i>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—É—é —á–∞—Å—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä: –û735 –≤–º–µ—Å—Ç–æ –û735–ë)</i>\n\n"
                f"‚ùì <b>–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?</b> –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Å—Ç–∞—Ä–æ—Å—Ç–µ –∏–ª–∏ –≤ –¥–µ–∫–∞–Ω–∞—Ç"
            )
        return  # –í –ª—é–±–æ–º —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –Ω–µ –±—ã–ª–æ —Ç–æ—á–Ω–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è, –≤—ã—Ö–æ–¥–∏–º

    # –≠—Ç–æ—Ç –∫–æ–¥ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –±—ã–ª–æ —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
    user_data_manager: UserDataManager = manager.middleware_data.get("user_data_manager")
    await user_data_manager.register_user(user_id=message.from_user.id, username=message.from_user.username)
    await user_data_manager.set_user_group(user_id=message.from_user.id, group=group_name)
    await user_data_manager.set_user_type(user_id=message.from_user.id, user_type="student")

    manager.dialog_data[DialogDataKeys.GROUP] = group_name
    await manager.switch_to(MainMenu.offer_tutorial)


async def on_teacher_entered(message: Message, message_input: MessageInput, manager: DialogManager):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –§–ò–û –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è."""
    teacher_name = (message.text or "").strip()
    if not teacher_name or len(teacher_name) < 3:
        await message.answer(
            "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥!</b>\n\n"
            "üìù –í–≤–µ–¥–∏—Ç–µ <b>–ø–æ–ª–Ω–æ–µ –§–ò–û –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è</b> (–º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞)\n"
            "üí° <i>–ù–∞–ø—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á –∏–ª–∏ –ü–µ—Ç—Ä–æ–≤ –ò.–ò.</i>"
        )
        return

    timetable_manager: TimetableManager = manager.middleware_data.get("manager")

    # –†–µ–∑–æ–ª–≤–∏–º –∫–∞–Ω–æ–Ω–∏—á–µ—Å–∫–æ–µ –∏–º—è —á–µ—Ä–µ–∑ TimetableManager
    canonical = timetable_manager.resolve_canonical_teacher(teacher_name)
    if not canonical:
        # –ü—Ä–µ–¥–ª–æ–∂–∏–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –±–ª–∏–∂–∞–π—à–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
        suggestions = timetable_manager.find_teachers_fuzzy(teacher_name, limit=5, score_cutoff=55)
        if suggestions:
            formatted_suggestions = [f"<code>{s}</code>" for s in suggestions[:3]]
            suggestion_text = "\n".join(formatted_suggestions)
            await message.answer(
                "üîç <b>–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω —Ç–æ—á–Ω–æ</b>\n\n"
                f"üí° <b>–í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –∏–º–µ–ª–∏ –≤ –≤–∏–¥—É:</b>\n{suggestion_text}\n\n"
                "üìù –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤"
            )
            return
        else:
            await message.answer(
                f'‚ùå <b>–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å "{teacher_name}" –Ω–µ –Ω–∞–π–¥–µ–Ω</b>\n\n'
                "üîç <b>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –§–ò–û:</b>\n"
                "‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏—è\n"
                "‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ —Ñ–∞–º–∏–ª–∏—é\n"
                "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–ª–Ω–æ–µ –§–ò–û –±–µ–∑ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–π"
            )
            return
    teacher_name = canonical

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
    user_data_manager: UserDataManager = manager.middleware_data.get("user_data_manager")
    await user_data_manager.register_user(user_id=message.from_user.id, username=message.from_user.username)
    await user_data_manager.set_user_group(user_id=message.from_user.id, group=teacher_name)
    await user_data_manager.set_user_type(user_id=message.from_user.id, user_type="teacher")

    manager.dialog_data[DialogDataKeys.GROUP] = teacher_name
    await manager.switch_to(MainMenu.offer_tutorial)


async def on_skip_tutorial_clicked(callback: CallbackQuery, button: Button, manager: DialogManager):
    group_name = manager.dialog_data.get(DialogDataKeys.GROUP)
    await manager.start(
        Schedule.view,
        data={DialogDataKeys.GROUP: group_name},
        mode=StartMode.RESET_STACK,
    )


async def on_show_tutorial_clicked(callback: CallbackQuery, button: Button, manager: DialogManager):
    await manager.start(About.page_1, mode=StartMode.RESET_STACK)


dialog = Dialog(
    # –û–∫–Ω–æ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - —É–ª—É—á—à–µ–Ω–Ω—ã–π UI
    Window(
        StaticMedia(path=WELCOME_IMAGE_PATH),
        Const("üëã <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –í–æ–µ–Ω–º–µ—Ö–∞!</b>\n\n" "üéØ <b>–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É —Ä–æ–ª—å:</b>"),
        Column(
            Button(
                Const("üéì –Ø —Å—Ç—É–¥–µ–Ω—Ç\nüìö –•–æ—á—É —Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å–≤–æ–µ–π –≥—Ä—É–ø–ø—ã"),
                id="user_type_student",
                on_click=on_user_type_selected,
            ),
            Button(
                Const("üßë‚Äçüè´ –Ø –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å\nüìã –•–æ—á—É —Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ—ë —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"),
                id="user_type_teacher",
                on_click=on_user_type_selected,
            ),
        ),
        state=MainMenu.choose_user_type,
        parse_mode="HTML",
    ),
    # –û–∫–Ω–æ –≤–≤–æ–¥–∞ –≥—Ä—É–ø–ø—ã –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ - —É–ª—É—á—à–µ–Ω–Ω—ã–π UI
    Window(
        StaticMedia(path=WELCOME_IMAGE_PATH),
        Format(
            "üéì <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞</b>\n\n"
            "üìù –í–≤–µ–¥–∏—Ç–µ <b>–Ω–æ–º–µ—Ä –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã</b>:\n"
            "üí° <i>–ù–∞–ø—Ä–∏–º–µ—Ä: {random_group}</i>\n\n"
            "‚ÑπÔ∏è <i>–ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—Ç–µ —Ç–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ, –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ - —è –Ω–∞–π–¥—É –ø–æ—Ö–æ–∂–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã</i>"
        ),
        MessageInput(on_group_entered),
        Button(
            Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É —Ä–æ–ª–∏"),
            id="back_to_role",
            on_click=lambda c, b, m: m.switch_to(MainMenu.choose_user_type),
        ),
        state=MainMenu.enter_group,
        getter=get_main_menu_data,
        parse_mode="HTML",
    ),
    # –û–∫–Ω–æ –≤–≤–æ–¥–∞ –§–ò–û –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π - —É–ª—É—á—à–µ–Ω–Ω—ã–π UI
    Window(
        StaticMedia(path=WELCOME_IMAGE_PATH),
        Const(
            "üßë‚Äçüè´ <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è</b>\n\n"
            "üìù –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ <b>–ø–æ–ª–Ω–æ–µ –§–ò–û</b>:\n"
            "üí° <i>–ù–∞–ø—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á</i>\n\n"
            "‚ÑπÔ∏è <i>–°–∏—Å—Ç–µ–º–∞ –Ω–∞–π–¥—ë—Ç –≤–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ –§–ò–û –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –≤—É–∑–∞</i>\n"
            "üîç <i>–ï—Å–ª–∏ —Ç–æ—á–Ω–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –Ω–µ—Ç, –±—É–¥—É—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω—ã –ø–æ—Ö–æ–∂–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã</i>"
        ),
        MessageInput(on_teacher_entered),
        Button(
            Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É —Ä–æ–ª–∏"),
            id="back_to_role_teacher",
            on_click=lambda c, b, m: m.switch_to(MainMenu.choose_user_type),
        ),
        state=MainMenu.enter_teacher,
        parse_mode="HTML",
    ),
    Window(
        Format(
            "üéâ <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</b>\n\n"
            "‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: <code>{dialog_data[group]}</code>\n\n"
            "üöÄ <b>–¢–µ–ø–µ—Ä—å –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã:</b>\n"
            "üìÖ –ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –ª—é–±–æ–π –¥–µ–Ω—å\n"
            "üîç –ü–æ–∏—Å–∫ –ø–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º –∏ –∞—É–¥–∏—Ç–æ—Ä–∏—è–º\n"
            "üîî –£–º–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø–∞—Ä–∞—Ö\n"
            "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞\n"
            "üí¨ –†–∞–±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö\n\n"
            "‚ùì <b>–•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π?</b>"
        ),
        Row(
            Button(
                Const("üìñ –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é"),
                id=WidgetIds.SHOW_TUTORIAL,
                on_click=on_show_tutorial_clicked,
            ),
            Button(
                Const("üöÄ –ù–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è!"),
                id=WidgetIds.SKIP_TUTORIAL,
                on_click=on_skip_tutorial_clicked,
            ),
        ),
        state=MainMenu.offer_tutorial,
    ),
)
