import random
from thefuzz import process

from aiogram.types import Message, CallbackQuery
import re
from aiogram_dialog import Dialog, Window, DialogManager, StartMode
from aiogram_dialog.widgets.text import Const, Format
from aiogram_dialog.widgets.input import MessageInput
from aiogram_dialog.widgets.media import StaticMedia
from aiogram_dialog.widgets.kbd import Button, Row

from .states import MainMenu, Schedule, About
from .constants import DialogDataKeys, WidgetIds
from core.manager import TimetableManager
from core.user_data import UserDataManager
from core.config import WELCOME_IMAGE_PATH

async def get_main_menu_data(dialog_manager: DialogManager, **kwargs):
    """
    –í—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é –≥—Ä—É–ø–ø—É –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞ –≤ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.
    """
    manager: TimetableManager = dialog_manager.middleware_data.get("manager")
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø, –∏—Å–∫–ª—é—á–∞—è —Å–ª—É–∂–µ–±–Ω—ã–µ –∫–ª—é—á–∏
    groups = [g for g in manager._schedules.keys() if not g.startswith('__')]
    
    # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –≥—Ä—É–ø–ø—É –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
    random_group = random.choice(groups) if groups else "–û735–ë"
    
    return {"random_group": random_group}


async def on_group_entered(message: Message, message_input: MessageInput, manager: DialogManager):
    # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –≤–≤–æ–¥: –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã/–±—É–∫–≤—ã, –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É
    raw = (message.text or "").upper()
    group_name = re.sub(r"[^–ê-–ØA-Z0-9]", "", raw)[:20]
    if not group_name:
        await message.answer("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä: <b>–û735–ë</b>.")
        return
    timetable_manager: TimetableManager = manager.middleware_data.get("manager")
    all_groups = [g for g in timetable_manager._schedules.keys() if not g.startswith('__')]

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä—è–º–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
    if group_name not in all_groups:
        # –ï—Å–ª–∏ –ø—Ä—è–º–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –Ω–µ—Ç, –∏—â–µ–º –ø–æ—Ö–æ–∂–∏–µ
        suggestions = process.extract(group_name, all_groups, limit=3)
        good_suggestions = [s[0] for s in suggestions if s[1] > 75]

        if good_suggestions:
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
            formatted_suggestions = [f"<code>{s}</code>" for s in good_suggestions]
            # –°–æ–µ–¥–∏–Ω—è–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã —á–µ—Ä–µ–∑ ", –∏–ª–∏ " –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è
            suggestion_text = ", –∏–ª–∏ ".join(formatted_suggestions)
            await message.answer(f"‚ùå –ì—Ä—É–ø–ø–∞ <b>{group_name}</b> –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.\n–í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –∏–º–µ–ª–∏ –≤ –≤–∏–¥—É: {suggestion_text}?")
        else:
            # –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–∂–µ –ø–æ—Ö–æ–∂–∏—Ö, –≤—ã–≤–æ–¥–∏–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await message.answer(f"‚ùå –ì—Ä—É–ø–ø–∞ <b>{group_name}</b> –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
        return # –í –ª—é–±–æ–º —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –Ω–µ –±—ã–ª–æ —Ç–æ—á–Ω–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è, –≤—ã—Ö–æ–¥–∏–º

    # –≠—Ç–æ—Ç –∫–æ–¥ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –±—ã–ª–æ —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
    user_data_manager: UserDataManager = manager.middleware_data.get("user_data_manager")
    await user_data_manager.register_user(
        user_id=message.from_user.id,
        username=message.from_user.username
    )
    await user_data_manager.set_user_group(user_id=message.from_user.id, group=group_name)
    
    manager.dialog_data[DialogDataKeys.GROUP] = group_name
    await manager.switch_to(MainMenu.offer_tutorial)


async def on_skip_tutorial_clicked(callback: CallbackQuery, button: Button, manager: DialogManager):
    group_name = manager.dialog_data.get(DialogDataKeys.GROUP)
    await manager.start(Schedule.view, data={DialogDataKeys.GROUP: group_name}, mode=StartMode.RESET_STACK)

async def on_show_tutorial_clicked(callback: CallbackQuery, button: Button, manager: DialogManager):
    await manager.start(About.page_1, mode=StartMode.RESET_STACK)

dialog = Dialog(
    Window(
        StaticMedia(path=WELCOME_IMAGE_PATH),
        Format("üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –í–æ–µ–Ω–º–µ—Ö–∞.\n\n"
               "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã:\n"
               "<i>–ù–∞–ø—Ä–∏–º–µ—Ä: {random_group}</i>"),
        MessageInput(on_group_entered),
        state=MainMenu.enter_group,
        getter=get_main_menu_data,
        parse_mode="HTML"
    ),
    Window(
        Format(
            "‚úÖ –ì—Ä—É–ø–ø–∞ <b>{dialog_data[group]}</b> —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!\n\n"
            "–Ø –º–æ–≥—É –Ω–µ —Ç–æ–ª—å–∫–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –Ω–æ –∏ –∏—Å–∫–∞—Ç—å –ø–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º, "
            "–ø—Ä–∏—Å—ã–ª–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –¥—Ä—É–≥–∏—Ö —á–∞—Ç–∞—Ö. "
            "–•–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ—Ä–æ—Ç–∫—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é?"
        ),
        Row(
            Button(Const("üìñ –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é"), id=WidgetIds.SHOW_TUTORIAL, on_click=on_show_tutorial_clicked),
            Button(Const("–ü–æ–Ω—è—Ç–Ω–æ, —Å–ø–∞—Å–∏–±–æ!"), id=WidgetIds.SKIP_TUTORIAL, on_click=on_skip_tutorial_clicked)
        ),
        state=MainMenu.offer_tutorial
    )
)