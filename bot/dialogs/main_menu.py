from aiogram.types import Message
from aiogram_dialog import Dialog, Window, DialogManager
from aiogram_dialog.widgets.text import Const
from aiogram_dialog.widgets.input import MessageInput

from .states import MainMenu, Schedule
from core.manager import TimetableManager
from core.user_data import UserDataManager

async def on_group_entered(message: Message, message_input: MessageInput, manager: DialogManager):
    group_name = message.text.upper()
    timetable_manager: TimetableManager = manager.middleware_data.get("manager")
    user_data_manager: UserDataManager = manager.middleware_data.get("user_data_manager")

    if group_name not in timetable_manager._schedules:
        await message.answer(f"‚ùå –ì—Ä—É–ø–ø–∞ <b>{group_name}</b> –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑. –ù–∞–ø—Ä–∏–º–µ—Ä: <i>–û735–ë</i>")
        return

    await user_data_manager.set_user_group(user_id=message.from_user.id, group=group_name)
    await message.answer(f"‚úÖ –ì—Ä—É–ø–ø–∞ <b>{group_name}</b> —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!")

    await manager.done() 
    await manager.start(Schedule.view, data={"group": group_name})

dialog = Dialog(
    Window(
        Const("üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –í–æ–µ–Ω–º–µ—Ö–∞.\n\n"
              "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã:"),
        MessageInput(on_group_entered),
        state=MainMenu.enter_group,
    )
)