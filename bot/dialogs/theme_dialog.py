from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram import Bot
from aiogram_dialog import Dialog, Window, DialogManager
from aiogram_dialog.widgets.kbd import Button, Row, Back, Select
from aiogram_dialog.widgets.text import Const, Format, Jinja

from .states import SettingsMenu
from .constants import WidgetIds
from core.user_data import UserDataManager
from core.config import SUBSCRIPTION_CHANNEL
from bot.tasks import check_theme_subscription_task


async def get_theme_data(dialog_manager: DialogManager, **kwargs):
    """–ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ —Ç–µ–∫—É—â–µ–π —Ç–µ–º–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    user_data_manager: UserDataManager = dialog_manager.middleware_data.get("user_data_manager")
    user_id = dialog_manager.event.from_user.id
    current_theme = await user_data_manager.get_user_theme(user_id)

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–µ–º —Å —ç–º–æ–¥–∑–∏
    themes_info = {
        'standard': ('üé® –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è', '–∫—Ä–∞—Å–Ω–∞—è –¥–ª—è –Ω–µ—á—ë—Ç–Ω—ã—Ö –Ω–µ–¥–µ–ª—å, —Ñ–∏–æ–ª–µ—Ç–æ–≤–∞—è –¥–ª—è —á—ë—Ç–Ω—ã—Ö'),
        'light': ('‚òÄÔ∏è –°–≤–µ—Ç–ª–∞—è', '–±–∏—Ä—é–∑–æ–≤–∞—è —Ç–µ–º–∞ —Å –∫—Ä–µ–º–æ–≤—ã–º–∏ –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏'),
        'dark': ('üåô –¢—ë–º–Ω–∞—è', '—Ç—ë–º–Ω–∞—è —Ç–µ–º–∞ —Å —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–º–∏ –∞–∫—Ü–µ–Ω—Ç–∞–º–∏'),
        'classic': ('üìú –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è', '—Ç—ë–º–Ω–æ-—Å–∏–Ω—è—è —Ç–µ–º–∞ –≤ —Ü–≤–µ—Ç–æ–≤–æ–π –≥–∞–º–º–µ –í–æ–µ–Ω–º–µ—Ö–∞'),
        'coffee': ('‚òï –ö–æ—Ñ–µ–π–Ω–∞—è', '–∫–æ—Ä–∏—á–Ω–µ–≤–æ-–∑–æ–ª–æ—Ç–∞—è —Ç–µ–º–∞ —Å –∫—Ä–µ–º–æ–≤—ã–º–∏ –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏')
    }

    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–µ–º —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–µ–∫—É—â–µ–π –≤—ã–±—Ä–∞–Ω–Ω–æ–π
    themes = []
    for theme_id, (name, description) in themes_info.items():
        themes.append({
            'id': theme_id,
            'name': name,
            'description': description,
            'is_current': theme_id == current_theme
        })

    is_subscribed = await _check_theme_subscription(user_id, dialog_manager)

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω, –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    if not is_subscribed and SUBSCRIPTION_CHANNEL:
        await manager.switch_to(SettingsMenu.theme_subscription_gate)
        return {}

    return {
        'current_theme': themes_info.get(current_theme, ('üé® –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è', '–æ—Ä–∞–Ω–∂–µ–≤–æ-–∫—Ä–∞—Å–Ω–∞—è –¥–ª—è –Ω–µ—á—ë—Ç–Ω—ã—Ö –Ω–µ–¥–µ–ª—å, —Ñ–∏–æ–ª–µ—Ç–æ–≤–∞—è –¥–ª—è —á—ë—Ç–Ω—ã—Ö'))[0],
        'themes': themes,
        'is_subscribed': is_subscribed
    }


async def _check_theme_subscription(user_id: int, dialog_manager: DialogManager) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –∫–∞–Ω–∞–ª –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–µ–º–∞–º."""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à —Å–Ω–∞—á–∞–ª–∞
        from core.config import get_redis_client
        redis_client = await get_redis_client()
        cache_key = f"theme_sub_status:{user_id}"
        cached = await redis_client.get(cache_key)

        if cached is not None:
            return cached == '1'

        # –ï—Å–ª–∏ –∫—ç—à–∞ –Ω–µ—Ç, –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ API
        if SUBSCRIPTION_CHANNEL:
            bot: Bot = dialog_manager.middleware_data.get("bot")
            if bot:
                member = await bot.get_chat_member(SUBSCRIPTION_CHANNEL, user_id)
                status = getattr(member, "status", None)
                is_subscribed = status in ("member", "administrator", "creator")

                # –ö—ç—à–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                await redis_client.set(cache_key, '1' if is_subscribed else '0', ex=21600 if is_subscribed else 60)
                return is_subscribed

    except Exception:
        pass

    return False


async def on_theme_selected(callback: CallbackQuery, widget: Select, manager: DialogManager, item_id: str):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã."""
    user_data_manager: UserDataManager = manager.middleware_data.get("user_data_manager")
    user_id = callback.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –ø–µ—Ä–µ–¥ —Å–º–µ–Ω–æ–π —Ç–µ–º—ã
    is_subscribed = await _check_theme_subscription(user_id, manager)

    if not is_subscribed and SUBSCRIPTION_CHANNEL:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ –∑–∞–¥–∞—á—É
        check_theme_subscription_task.send(user_id, callback.id)
        await callback.answer("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–µ–º–∞–º", show_alert=True)
        return

    await user_data_manager.set_user_theme(user_id, item_id)

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–µ–º–µ
    themes_info = {
        'standard': 'üé® –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è',
        'light': '‚òÄÔ∏è –°–≤–µ—Ç–ª–∞—è',
        'dark': 'üåô –¢—ë–º–Ω–∞—è',
        'classic': 'üìú –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è',
        'coffee': '‚òï –ö–æ—Ñ–µ–π–Ω–∞—è'
    }

    theme_name = themes_info.get(item_id, 'üé® –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è')

    await callback.answer(f"‚úÖ –¢–µ–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ {theme_name}!")
    await manager.switch_to(SettingsMenu.main)


async def on_back_to_settings(callback: CallbackQuery, button: Button, manager: DialogManager):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏."""
    await manager.switch_to(SettingsMenu.main)


async def on_check_subscription(callback: CallbackQuery, button: Button, manager: DialogManager):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏."""
    user_id = callback.from_user.id

    # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
    check_theme_subscription_task.send(user_id, callback.id)

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Ç–µ–º
    await manager.switch_to(SettingsMenu.choose_theme)


# –î–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã
theme_dialog = Dialog(
    # –û–∫–Ω–æ —Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π –¥–æ—Å—Ç—É–ø–∞ (–µ—Å–ª–∏ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω)
    Window(
        Const("üé® <b>–î–æ—Å—Ç—É–ø –∫ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º —Ç–µ–º–∞–º</b>\n\n"
              "–í—ã–±–µ—Ä–∏—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Ç–µ–º—É –¥–ª—è –≤–∞—à–µ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:\n\n"
              "üé® <b>–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è</b> - –∫—Ä–∞—Å–Ω–∞—è –¥–ª—è –Ω–µ—á—ë—Ç–Ω—ã—Ö, —Ñ–∏–æ–ª–µ—Ç–æ–≤–∞—è –¥–ª—è —á—ë—Ç–Ω—ã—Ö –Ω–µ–¥–µ–ª—å\n"
              "‚òÄÔ∏è <b>–°–≤–µ—Ç–ª–∞—è</b> - –±–∏—Ä—é–∑–æ–≤–∞—è —Ç–µ–º–∞ —Å –∫—Ä–µ–º–æ–≤—ã–º–∏ –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏\n"
              "üåô <b>–¢—ë–º–Ω–∞—è</b> - —Ç—ë–º–Ω–∞—è —Ç–µ–º–∞ —Å —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–º–∏ –∞–∫—Ü–µ–Ω—Ç–∞–º–∏\n"
              "üìú <b>–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è</b> - —Ç—ë–º–Ω–æ-—Å–∏–Ω—è—è —Ç–µ–º–∞ —Å –±–µ–ª—ã–º–∏ –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏\n"
              "‚òï <b>–ö–æ—Ñ–µ–π–Ω–∞—è</b> - –∫–æ—Ä–∏—á–Ω–µ–≤–æ-–∑–æ–ª–æ—Ç–∞—è —Ç–µ–º–∞ —Å –∫—Ä–µ–º–æ–≤—ã–º–∏ –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏\n\n"
              "<i>–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –ø–æ –ø–æ–¥–ø–∏—Å–∫–µ –Ω–∞ –∫–∞–Ω–∞–ª —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏</i>"),
        Button(Const("‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É"), id="check_subscription", on_click=on_check_subscription),
        Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"), on_click=on_back_to_settings),
        state=SettingsMenu.theme_subscription_gate,
        parse_mode="HTML"
    ),

    # –û–∫–Ω–æ —Å –≤—ã–±–æ—Ä–æ–º —Ç–µ–º—ã (–µ—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω)
    Window(
        Const("üé® <b>–í—ã–±–æ—Ä —Ç–µ–º—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è</b>\n\n"
              "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –¥–ª—è –≤–∞—à–µ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:\n"),
        Format("–¢–µ–∫—É—â–∞—è —Ç–µ–º–∞: <b>{current_theme}</b>\n"),
        Const("\nüìã <i>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–º—ã:</i>\n"),

        # –°–ø–∏—Å–æ–∫ —Ç–µ–º –¥–ª—è –≤—ã–±–æ—Ä–∞
        Select(
            Jinja(
                "{% if item.is_current %}"
                "‚úÖ <b>{{ item.name }}</b> (—Ç–µ–∫—É—â–∞—è)\n"
                "<i>{{ item.description }}</i>\n\n"
                "{% else %}"
                "üîò {{ item.name }}\n"
                "<i>{{ item.description }}</i>\n\n"
                "{% endif %}"
            ),
            id="select_theme",
            item_id_getter=lambda item: item['id'],
            items="themes",
            on_click=on_theme_selected
        ),

        Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"), on_click=on_back_to_settings),

        state=SettingsMenu.choose_theme,
        getter=get_theme_data,
        parse_mode="HTML"
    )
)
