input {
  gelf {
    # Слушаем на порту 12201 (UDP)
    port => 12201
    # Указываем кодек для парсинга JSON
    codec => "json"
  }
}

filter {
  # Пытаемся распарсить поле "message" как JSON,
  # так как JSONFormatter упаковывает основной лог в это поле.
  json {
    source => "message"
    target => "log_data" # Помещаем результат в новое поле
  }

  # Если парсинг удался, извлекаем поля на верхний уровень
  if [log_data] {
    # Копируем поля из log_data на верхний уровень
    # Например, log_data.user_id станет просто user_id
    ruby {
      code => "
        event.get('log_data').each do |key, value|
          event.set(key, value)
        end
      "
    }
    # Удаляем временное поле
    mutate {
      remove_field => ["log_data", "message"]
    }
  }
  
  # Преобразуем поле с датой в настоящий тип даты
  date {
    match => [ "asctime", "yyyy-MM-dd HH:mm:ss,SSS" ]
    target => "@timestamp"
  }
}

output {
  elasticsearch {
    # Адрес Elasticsearch из docker-compose
    hosts => ["http://elasticsearch:9200"]
    # Индекс будет создаваться по дням, например, "logstash-2025.07.11"
    index => "logstash-%{+YYYY.MM.dd}"
  }
  # Для отладки можно выводить в консоль
  # stdout { codec => rubydebug }
}