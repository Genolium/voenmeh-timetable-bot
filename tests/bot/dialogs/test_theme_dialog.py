import pytest
from unittest.mock import AsyncMock, MagicMock

from bot.dialogs.theme_dialog import get_theme_data, on_theme_selected, on_check_subscription
from bot.dialogs.states import SettingsMenu
from core.config import SUBSCRIPTION_CHANNEL


@pytest.fixture
def mock_manager():
    """–°–æ–∑–¥–∞–µ—Ç –º–æ–∫ DialogManager –¥–ª—è —Ç–µ—Å—Ç–æ–≤."""
    mock_udm = AsyncMock()
    mock_bot = AsyncMock()
    manager = AsyncMock()

    manager.middleware_data = {
        "user_data_manager": mock_udm,
        "bot": mock_bot
    }
    manager.event = MagicMock()
    manager.event.from_user.id = 123

    return manager


@pytest.mark.asyncio
class TestThemeDialog:

    async def test_get_theme_data_subscribed(self, mock_manager):
        """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ç–µ–º—ã –¥–ª—è –ø–æ–¥–ø–∏—Å–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        # –ú–æ–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–¥–ø–∏—Å–∫–∏
        mock_manager.middleware_data["bot"].get_chat_member.return_value = AsyncMock()
        mock_manager.middleware_data["bot"].get_chat_member.return_value.status = "member"

        # –ú–æ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        mock_manager.middleware_data["user_data_manager"].get_user_theme.return_value = "light"

        # –ú–æ–∫–∞–µ–º Redis
        mock_redis = AsyncMock()
        mock_redis.get.return_value = None  # –ù–µ—Ç –∫—ç—à–∞

        # –ó–∞–º–µ–Ω—è–µ–º get_redis_client
        import bot.dialogs.theme_dialog as theme_module
        original_get_redis = theme_module.get_redis_client
        theme_module.get_redis_client = AsyncMock(return_value=mock_redis)

        try:
            data = await get_theme_data(mock_manager)

            # –î–æ–ª–∂–Ω—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–∫–Ω–∞ –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω)
            assert "themes" in data
            assert "current_theme" in data
            assert len(data["themes"]) == 5  # 5 —Ç–µ–º

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–º–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞
            assert data["current_theme"] == "‚òÄÔ∏è –°–≤–µ—Ç–ª–∞—è"

        finally:
            # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
            theme_module.get_redis_client = original_get_redis

    async def test_get_theme_data_not_subscribed(self, mock_manager):
        """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ç–µ–º—ã –¥–ª—è –Ω–µ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        # –ú–æ–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–¥–ø–∏—Å–∫–∏ (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω)
        mock_manager.middleware_data["bot"].get_chat_member.return_value = AsyncMock()
        mock_manager.middleware_data["bot"].get_chat_member.return_value.status = "left"

        # –ú–æ–∫–∞–µ–º Redis
        mock_redis = AsyncMock()
        mock_redis.get.return_value = '0'  # –ö—ç—à –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω

        # –ó–∞–º–µ–Ω—è–µ–º get_redis_client
        import bot.dialogs.theme_dialog as theme_module
        original_get_redis = theme_module.get_redis_client
        theme_module.get_redis_client = AsyncMock(return_value=mock_redis)

        try:
            data = await get_theme_data(mock_manager)

            # –î–æ–ª–∂–Ω—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—É–¥–µ—Ç –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω –Ω–∞ —ç–∫—Ä–∞–Ω –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏)
            assert data == {}

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±—ã–ª –≤—ã–∑–≤–∞–Ω switch_to –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
            mock_manager.switch_to.assert_called_with(SettingsMenu.theme_subscription_gate)

        finally:
            theme_module.get_redis_client = original_get_redis

    async def test_on_theme_selected_subscribed(self, mock_manager):
        """–¢–µ—Å—Ç –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º."""
        # –ú–æ–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–¥–ø–∏—Å–∫–∏ (–ø–æ–¥–ø–∏—Å–∞–Ω)
        mock_manager.middleware_data["bot"].get_chat_member.return_value = AsyncMock()
        mock_manager.middleware_data["bot"].get_chat_member.return_value.status = "member"

        # –ú–æ–∫–∞–µ–º Redis
        mock_redis = AsyncMock()
        mock_redis.get.return_value = '1'  # –ü–æ–¥–ø–∏—Å–∞–Ω

        # –ó–∞–º–µ–Ω—è–µ–º get_redis_client
        import bot.dialogs.theme_dialog as theme_module
        original_get_redis = theme_module.get_redis_client
        theme_module.get_redis_client = AsyncMock(return_value=mock_redis)

        try:
            # –ú–æ–∫–∞–µ–º callback
            mock_callback = AsyncMock()
            mock_callback.from_user.id = 123

            # –ú–æ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            mock_manager.middleware_data["user_data_manager"].set_user_theme = AsyncMock()

            await on_theme_selected(mock_callback, None, mock_manager, "dark")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–º–∞ –±—ã–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
            mock_manager.middleware_data["user_data_manager"].set_user_theme.assert_called_with(123, "dark")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏–ª –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            mock_callback.answer.assert_called_with("‚úÖ –¢–µ–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ üåô –¢—ë–º–Ω–∞—è!")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–µ—Ä–Ω—É–ª—Å—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            mock_manager.switch_to.assert_called_with(SettingsMenu.main)

        finally:
            theme_module.get_redis_client = original_get_redis

    async def test_on_theme_selected_not_subscribed(self, mock_manager):
        """–¢–µ—Å—Ç –ø–æ–ø—ã—Ç–∫–∏ –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã –Ω–µ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º."""
        # –ú–æ–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–¥–ø–∏—Å–∫–∏ (–Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω)
        mock_manager.middleware_data["bot"].get_chat_member.return_value = AsyncMock()
        mock_manager.middleware_data["bot"].get_chat_member.return_value.status = "left"

        # –ú–æ–∫–∞–µ–º Redis
        mock_redis = AsyncMock()
        mock_redis.get.return_value = '0'  # –ù–µ –ø–æ–¥–ø–∏—Å–∞–Ω

        # –ó–∞–º–µ–Ω—è–µ–º get_redis_client
        import bot.dialogs.theme_dialog as theme_module
        original_get_redis = theme_module.get_redis_client
        theme_module.get_redis_client = AsyncMock(return_value=mock_redis)

        try:
            # –ú–æ–∫–∞–µ–º callback
            mock_callback = AsyncMock()
            mock_callback.from_user.id = 123

            await on_theme_selected(mock_callback, None, mock_manager, "dark")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏–ª –æ—à–∏–±–∫—É
            mock_callback.answer.assert_called_with("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–µ–º–∞–º", show_alert=True)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–º–∞ –ù–ï –±—ã–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
            mock_manager.middleware_data["user_data_manager"].set_user_theme.assert_not_called()

        finally:
            theme_module.get_redis_client = original_get_redis

    async def test_on_check_subscription(self, mock_manager):
        """–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏."""
        mock_callback = AsyncMock()
        mock_callback.from_user.id = 123

        # –ú–æ–∫–∞–µ–º –∑–∞–¥–∞—á—É –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
        import bot.dialogs.theme_dialog as theme_module
        original_task = theme_module.check_theme_subscription_task
        theme_module.check_theme_subscription_task = AsyncMock()

        try:
            await on_check_subscription(mock_callback, None, mock_manager)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–¥–∞—á–∞ –±—ã–ª–∞ –≤—ã–∑–≤–∞–Ω–∞
            theme_module.check_theme_subscription_task.send.assert_called_with(123, mock_callback.id)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–µ—Ä–Ω—É–ª—Å—è –∫ –≤—ã–±–æ—Ä—É —Ç–µ–º—ã
            mock_manager.switch_to.assert_called_with(SettingsMenu.choose_theme)

        finally:
            theme_module.check_theme_subscription_task = original_task
