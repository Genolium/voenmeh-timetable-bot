import pytest
from datetime import date
from core.schedule_diff import (
    ScheduleDiffDetector, ScheduleDiffFormatter, 
    ChangeType, LessonChange, GroupScheduleDiff
)


class TestScheduleDiffDetector:
    """–¢–µ—Å—Ç—ã –¥–ª—è –¥–µ—Ç–µ–∫—Ç–æ—Ä–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏."""
    
    def test_compare_day_schedules_no_changes(self):
        """–¢–µ—Å—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π."""
        old_schedule = {
            'lessons': [
                {'time': '09:00-10:30', 'subject': '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', 'room': '101', 'teachers': '–ò–≤–∞–Ω–æ–≤'},
                {'time': '10:40-12:10', 'subject': '–§–∏–∑–∏–∫–∞', 'room': '102', 'teachers': '–ü–µ—Ç—Ä–æ–≤'}
            ]
        }
        new_schedule = {
            'lessons': [
                {'time': '09:00-10:30', 'subject': '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', 'room': '101', 'teachers': '–ò–≤–∞–Ω–æ–≤'},
                {'time': '10:40-12:10', 'subject': '–§–∏–∑–∏–∫–∞', 'room': '102', 'teachers': '–ü–µ—Ç—Ä–æ–≤'}
            ]
        }
        
        changes = ScheduleDiffDetector.compare_day_schedules(old_schedule, new_schedule)
        assert len(changes) == 0
    
    def test_compare_day_schedules_lesson_added(self):
        """–¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –ø–∞—Ä—ã."""
        old_schedule = {
            'lessons': [
                {'time': '09:00-10:30', 'subject': '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', 'room': '101', 'teachers': '–ò–≤–∞–Ω–æ–≤'}
            ]
        }
        new_schedule = {
            'lessons': [
                {'time': '09:00-10:30', 'subject': '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', 'room': '101', 'teachers': '–ò–≤–∞–Ω–æ–≤'},
                {'time': '10:40-12:10', 'subject': '–§–∏–∑–∏–∫–∞', 'room': '102', 'teachers': '–ü–µ—Ç—Ä–æ–≤'}
            ]
        }
        
        changes = ScheduleDiffDetector.compare_day_schedules(old_schedule, new_schedule)
        assert len(changes) == 1
        assert changes[0].change_type == ChangeType.LESSON_ADDED
        assert changes[0].subject == '–§–∏–∑–∏–∫–∞'
        assert changes[0].time == '10:40-12:10'
        assert changes[0].room == '102'
        assert changes[0].teacher == '–ü–µ—Ç—Ä–æ–≤'
    
    def test_compare_day_schedules_lesson_removed(self):
        """–¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è –ø–∞—Ä—ã."""
        old_schedule = {
            'lessons': [
                {'time': '09:00-10:30', 'subject': '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', 'room': '101', 'teachers': '–ò–≤–∞–Ω–æ–≤'},
                {'time': '10:40-12:10', 'subject': '–§–∏–∑–∏–∫–∞', 'room': '102', 'teachers': '–ü–µ—Ç—Ä–æ–≤'}
            ]
        }
        new_schedule = {
            'lessons': [
                {'time': '09:00-10:30', 'subject': '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', 'room': '101', 'teachers': '–ò–≤–∞–Ω–æ–≤'}
            ]
        }
        
        changes = ScheduleDiffDetector.compare_day_schedules(old_schedule, new_schedule)
        assert len(changes) == 1
        assert changes[0].change_type == ChangeType.LESSON_REMOVED
        assert changes[0].subject == '–§–∏–∑–∏–∫–∞'
        assert changes[0].time == '10:40-12:10'
    
    def test_compare_day_schedules_room_changed(self):
        """–¢–µ—Å—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞—É–¥–∏—Ç–æ—Ä–∏–∏."""
        old_schedule = {
            'lessons': [
                {'time': '09:00-10:30', 'subject': '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', 'room': '101', 'teachers': '–ò–≤–∞–Ω–æ–≤'}
            ]
        }
        new_schedule = {
            'lessons': [
                {'time': '09:00-10:30', 'subject': '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', 'room': '201', 'teachers': '–ò–≤–∞–Ω–æ–≤'}
            ]
        }
        
        changes = ScheduleDiffDetector.compare_day_schedules(old_schedule, new_schedule)
        assert len(changes) == 1
        assert changes[0].change_type == ChangeType.ROOM_CHANGED
        assert changes[0].subject == '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞'
        assert changes[0].old_value == '101'
        assert changes[0].new_value == '201'
    
    def test_compare_day_schedules_teacher_changed(self):
        """–¢–µ—Å—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è."""
        old_schedule = {
            'lessons': [
                {'time': '09:00-10:30', 'subject': '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', 'room': '101', 'teachers': '–ò–≤–∞–Ω–æ–≤'}
            ]
        }
        new_schedule = {
            'lessons': [
                {'time': '09:00-10:30', 'subject': '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', 'room': '101', 'teachers': '–°–∏–¥–æ—Ä–æ–≤'}
            ]
        }
        
        changes = ScheduleDiffDetector.compare_day_schedules(old_schedule, new_schedule)
        assert len(changes) == 1
        assert changes[0].change_type == ChangeType.TEACHER_CHANGED
        assert changes[0].subject == '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞'
        assert changes[0].old_value == '–ò–≤–∞–Ω–æ–≤'
        assert changes[0].new_value == '–°–∏–¥–æ—Ä–æ–≤'
    
    def test_compare_day_schedules_type_changed(self):
        """–¢–µ—Å—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–∏–ø–∞ –ø–∞—Ä—ã."""
        old_schedule = {
            'lessons': [
                {'time': '09:00-10:30', 'subject': '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', 'type': '–õ–µ–∫—Ü–∏—è', 'room': '101', 'teachers': '–ò–≤–∞–Ω–æ–≤'}
            ]
        }
        new_schedule = {
            'lessons': [
                {'time': '09:00-10:30', 'subject': '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', 'type': '–°–µ–º–∏–Ω–∞—Ä', 'room': '101', 'teachers': '–ò–≤–∞–Ω–æ–≤'}
            ]
        }
        
        changes = ScheduleDiffDetector.compare_day_schedules(old_schedule, new_schedule)
        assert len(changes) == 1
        assert changes[0].change_type == ChangeType.TYPE_CHANGED
        assert changes[0].subject == '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞'
        assert changes[0].old_value == '–õ–µ–∫—Ü–∏—è'
        assert changes[0].new_value == '–°–µ–º–∏–Ω–∞—Ä'
    
    def test_compare_day_schedules_multiple_changes(self):
        """–¢–µ—Å—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π."""
        old_schedule = {
            'lessons': [
                {'time': '09:00-10:30', 'subject': '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', 'room': '101', 'teachers': '–ò–≤–∞–Ω–æ–≤'},
                {'time': '10:40-12:10', 'subject': '–§–∏–∑–∏–∫–∞', 'room': '102', 'teachers': '–ü–µ—Ç—Ä–æ–≤'}
            ]
        }
        new_schedule = {
            'lessons': [
                {'time': '09:00-10:30', 'subject': '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', 'room': '201', 'teachers': '–°–∏–¥–æ—Ä–æ–≤'},  # –ò–∑–º–µ–Ω–µ–Ω—ã –∞—É–¥–∏—Ç–æ—Ä–∏—è –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å
                {'time': '12:20-13:50', 'subject': '–•–∏–º–∏—è', 'room': '103', 'teachers': '–ö–æ–∑–ª–æ–≤'}  # –ù–æ–≤–∞—è –ø–∞—Ä–∞
            ]
        }
        
        changes = ScheduleDiffDetector.compare_day_schedules(old_schedule, new_schedule)
        
        # –î–æ–ª–∂–Ω–æ –±—ã—Ç—å: —É–¥–∞–ª–µ–Ω–∏–µ –§–∏–∑–∏–∫–∏, –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –•–∏–º–∏–∏, –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∞—É–¥–∏—Ç–æ—Ä–∏–∏ –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è —É –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∏
        assert len(changes) == 4
        
        change_types = [change.change_type for change in changes]
        assert ChangeType.LESSON_REMOVED in change_types
        assert ChangeType.LESSON_ADDED in change_types
        assert ChangeType.ROOM_CHANGED in change_types
        assert ChangeType.TEACHER_CHANGED in change_types
    
    def test_compare_day_schedules_empty_schedules(self):
        """–¢–µ—Å—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –ø—É—Å—Ç—ã—Ö —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π."""
        old_schedule = {'lessons': []}
        new_schedule = {'lessons': []}
        
        changes = ScheduleDiffDetector.compare_day_schedules(old_schedule, new_schedule)
        assert len(changes) == 0
    
    def test_compare_day_schedules_with_errors(self):
        """–¢–µ—Å—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π —Å –æ—à–∏–±–∫–∞–º–∏."""
        old_schedule = {'error': '–ì—Ä—É–ø–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'}
        new_schedule = {
            'lessons': [
                {'time': '09:00-10:30', 'subject': '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', 'room': '101', 'teachers': '–ò–≤–∞–Ω–æ–≤'}
            ]
        }
        
        changes = ScheduleDiffDetector.compare_day_schedules(old_schedule, new_schedule)
        assert len(changes) == 1
        assert changes[0].change_type == ChangeType.LESSON_ADDED
    
    def test_compare_group_schedules(self):
        """–¢–µ—Å—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π –≥—Ä—É–ø–ø—ã."""
        old_schedule = {
            'lessons': [
                {'time': '09:00-10:30', 'subject': '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', 'room': '101', 'teachers': '–ò–≤–∞–Ω–æ–≤'}
            ]
        }
        new_schedule = {
            'lessons': [
                {'time': '09:00-10:30', 'subject': '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', 'room': '201', 'teachers': '–ò–≤–∞–Ω–æ–≤'}
            ]
        }
        
        diff = ScheduleDiffDetector.compare_group_schedules(
            group="–û735–ë",
            target_date=date(2025, 9, 1),
            old_schedule_data=old_schedule,
            new_schedule_data=new_schedule
        )
        
        assert diff.group == "–û735–ë"
        assert diff.date == date(2025, 9, 1)
        assert diff.has_changes()
        assert len(diff.changes) == 1
        assert diff.changes[0].change_type == ChangeType.ROOM_CHANGED


class TestScheduleDiffFormatter:
    """–¢–µ—Å—Ç—ã –¥–ª—è —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö."""
    
    def test_format_change_lesson_added(self):
        """–¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–∞—Ä—ã."""
        change = LessonChange(
            change_type=ChangeType.LESSON_ADDED,
            lesson_id="09:00-10:30_–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
            subject="–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
            time="09:00-10:30",
            room="101",
            teacher="–ò–≤–∞–Ω–æ–≤"
        )
        
        formatted = ScheduleDiffFormatter.format_change(change)
        assert "‚ûï" in formatted
        assert "–î–æ–±–∞–≤–ª–µ–Ω–∞ –ø–∞—Ä–∞" in formatted
        assert "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞" in formatted
        assert "09:00-10:30" in formatted
        assert "üìç 101" in formatted
        assert "üßë‚Äçüè´ –ò–≤–∞–Ω–æ–≤" in formatted
    
    def test_format_change_lesson_removed(self):
        """–¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø–∞—Ä—ã."""
        change = LessonChange(
            change_type=ChangeType.LESSON_REMOVED,
            lesson_id="10:40-12:10_–§–∏–∑–∏–∫–∞",
            subject="–§–∏–∑–∏–∫–∞",
            time="10:40-12:10"
        )
        
        formatted = ScheduleDiffFormatter.format_change(change)
        assert "‚ùå" in formatted
        assert "–û—Ç–º–µ–Ω–µ–Ω–∞ –ø–∞—Ä–∞" in formatted
        assert "–§–∏–∑–∏–∫–∞" in formatted
        assert "10:40-12:10" in formatted
    
    def test_format_change_room_changed(self):
        """–¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞—É–¥–∏—Ç–æ—Ä–∏–∏."""
        change = LessonChange(
            change_type=ChangeType.ROOM_CHANGED,
            lesson_id="09:00-10:30_–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
            subject="–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
            time="09:00-10:30",
            old_value="101",
            new_value="201"
        )
        
        formatted = ScheduleDiffFormatter.format_change(change)
        assert "üìç" in formatted
        assert "–ò–∑–º–µ–Ω–µ–Ω–∞ –∞—É–¥–∏—Ç–æ—Ä–∏—è" in formatted
        assert "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞" in formatted
        assert "101" in formatted
        assert "201" in formatted
        assert "‚Üí" in formatted
    
    def test_format_change_teacher_changed(self):
        """–¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è."""
        change = LessonChange(
            change_type=ChangeType.TEACHER_CHANGED,
            lesson_id="09:00-10:30_–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
            subject="–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
            time="09:00-10:30",
            old_value="–ò–≤–∞–Ω–æ–≤",
            new_value="–°–∏–¥–æ—Ä–æ–≤"
        )
        
        formatted = ScheduleDiffFormatter.format_change(change)
        assert "üßë‚Äçüè´" in formatted
        assert "–ò–∑–º–µ–Ω–µ–Ω –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å" in formatted
        assert "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞" in formatted
        assert "–ò–≤–∞–Ω–æ–≤" in formatted
        assert "–°–∏–¥–æ—Ä–æ–≤" in formatted
    
    def test_format_group_diff_with_changes(self):
        """–¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≥—Ä—É–ø–ø—ã."""
        changes = [
            LessonChange(
                change_type=ChangeType.LESSON_ADDED,
                lesson_id="09:00-10:30_–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
                subject="–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
                time="09:00-10:30",
                room="101"
            ),
            LessonChange(
                change_type=ChangeType.ROOM_CHANGED,
                lesson_id="10:40-12:10_–§–∏–∑–∏–∫–∞",
                subject="–§–∏–∑–∏–∫–∞",
                time="10:40-12:10",
                old_value="102",
                new_value="202"
            )
        ]
        
        diff = GroupScheduleDiff(
            group="–û735–ë",
            date=date(2025, 9, 1),
            changes=changes
        )
        
        formatted = ScheduleDiffFormatter.format_group_diff(diff)
        assert formatted is not None
        assert "üîî" in formatted
        assert "–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –û735–ë" in formatted
        assert "01.09.2025" in formatted
        assert "–î–æ–±–∞–≤–ª–µ–Ω–∞ –ø–∞—Ä–∞" in formatted
        assert "–ò–∑–º–µ–Ω–µ–Ω–∞ –∞—É–¥–∏—Ç–æ—Ä–∏—è" in formatted
        assert "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ" in formatted
    
    def test_format_group_diff_no_changes(self):
        """–¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π."""
        diff = GroupScheduleDiff(
            group="–û735–ë",
            date=date(2025, 9, 1),
            changes=[]
        )
        
        formatted = ScheduleDiffFormatter.format_group_diff(diff)
        assert formatted is None
    
    def test_format_group_diff_multiple_same_type_changes(self):
        """–¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –æ–¥–Ω–æ–≥–æ —Ç–∏–ø–∞."""
        changes = [
            LessonChange(
                change_type=ChangeType.LESSON_ADDED,
                lesson_id="09:00-10:30_–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
                subject="–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
                time="09:00-10:30"
            ),
            LessonChange(
                change_type=ChangeType.LESSON_ADDED,
                lesson_id="10:40-12:10_–§–∏–∑–∏–∫–∞",
                subject="–§–∏–∑–∏–∫–∞",
                time="10:40-12:10"
            ),
            LessonChange(
                change_type=ChangeType.LESSON_REMOVED,
                lesson_id="12:20-13:50_–•–∏–º–∏—è",
                subject="–•–∏–º–∏—è",
                time="12:20-13:50"
            )
        ]
        
        diff = GroupScheduleDiff(
            group="–û735–ë",
            date=date(2025, 9, 1),
            changes=changes
        )
        
        formatted = ScheduleDiffFormatter.format_group_diff(diff)
        assert formatted is not None
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã
        assert formatted.count("‚ûï") == 2  # –î–≤–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –ø–∞—Ä—ã
        assert formatted.count("‚ùå") == 1  # –û–¥–Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–∞—è –ø–∞—Ä–∞
        assert "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞" in formatted
        assert "–§–∏–∑–∏–∫–∞" in formatted
        assert "–•–∏–º–∏—è" in formatted
