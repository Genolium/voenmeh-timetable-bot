#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.insert(0, str(Path(__file__).parent))

from bot.dialogs.admin_menu import generate_all_images_background
from core.manager import TimetableManager
from redis.asyncio import Redis

async def test_generation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π."""
    
    print("üß™ –¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    print("=" * 50)
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Redis
        redis_client = Redis.from_url("redis://localhost:6379/0")
        
        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
        timetable_manager = await TimetableManager.create(redis_client=redis_client)
        
        if not timetable_manager:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å TimetableManager")
            return
        
        print("‚úÖ TimetableManager —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥—Ä—É–ø–ø
        all_groups = list(timetable_manager._schedules.keys())
        all_groups = [g for g in all_groups if not g.startswith('__')]
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –≥—Ä—É–ø–ø: {len(all_groups)}")
        
        if len(all_groups) == 0:
            print("‚ùå –ù–µ—Ç –≥—Ä—É–ø–ø –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∑–∞–¥–∞—á–∏
        week_types = [
            ("–ù–µ—á—ë—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è", "odd"),
            ("–ß—ë—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è", "even")
        ]
        
        tasks = []
        for group in all_groups[:3]:  # –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 3 –≥—Ä—É–ø–ø—ã –¥–ª—è —Ç–µ—Å—Ç–∞
            for week_name, week_key in week_types:
                group_schedule = timetable_manager._schedules.get(group.upper(), {})
                week_schedule = group_schedule.get(week_key, {})
                
                if week_schedule:
                    tasks.append((group, week_schedule, week_name, week_key))
        
        print(f"üìã –ó–∞–¥–∞—á –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {len(tasks)}")
        
        if len(tasks) == 0:
            print("‚ùå –ù–µ—Ç –∑–∞–¥–∞—á –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏")
            return
        
        # –°–æ–∑–¥–∞–µ–º –º–æ–∫-–±–æ—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        class MockBot:
            async def edit_message_text(self, text, chat_id, message_id, parse_mode=None, reply_markup=None):
                print(f"üìù –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞: {text[:100]}...")
            
            async def send_message(self, chat_id, text, parse_mode=None, reply_markup=None):
                print(f"üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: {text[:100]}...")
        
        mock_bot = MockBot()
        
        print("\nüöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –¥–ª—è –Ω–µ–±–æ–ª—å—à–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–¥–∞—á
        await generate_all_images_background(
            bot=mock_bot,
            admin_id=123456789,  # –¢–µ—Å—Ç–æ–≤—ã–π ID –∞–¥–º–∏–Ω–∞
            status_msg_id=1,
            timetable_manager=timetable_manager
        )
        
        print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_generation())
